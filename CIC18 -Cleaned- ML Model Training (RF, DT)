{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.10","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":2684763,"sourceType":"datasetVersion","datasetId":1634161}],"dockerImageVersionId":30474,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-10T07:16:02.057695Z","iopub.execute_input":"2024-08-10T07:16:02.058226Z","iopub.status.idle":"2024-08-10T07:16:02.078617Z","shell.execute_reply.started":"2024-08-10T07:16:02.058185Z","shell.execute_reply":"2024-08-10T07:16:02.077236Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"/kaggle/input/csecicids2018-cleaned/cleaned_ids2018_sampled.csv\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Reading the dataset","metadata":{}},{"cell_type":"code","source":"# read the data\ndf_dataset = pd.read_csv(\"/kaggle/input/csecicids2018-cleaned/cleaned_ids2018_sampled.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:02.081103Z","iopub.execute_input":"2024-08-10T07:16:02.081644Z","iopub.status.idle":"2024-08-10T07:16:17.300310Z","shell.execute_reply.started":"2024-08-10T07:16:02.081599Z","shell.execute_reply":"2024-08-10T07:16:17.298940Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":"# Displaying the data","metadata":{}},{"cell_type":"code","source":"df_dataset","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:17.302211Z","iopub.execute_input":"2024-08-10T07:16:17.302642Z","iopub.status.idle":"2024-08-10T07:16:17.684471Z","shell.execute_reply.started":"2024-08-10T07:16:17.302602Z","shell.execute_reply":"2024-08-10T07:16:17.683281Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"         Unnamed: 0  Dst Port  Protocol  Flow Duration  Tot Fwd Pkts  \\\n0            146275      3389         6        5206015             9   \n1            512109       443         6       60991608            14   \n2            807703        53        17          27292             1   \n3            491912       443         6       70343424            17   \n4            858679        53        17         137267             2   \n...             ...       ...       ...            ...           ...   \n1252841      940974     64678         6           1397             5   \n1252842       45433     51274         6              1             3   \n1252843      912254        80         6            233             2   \n1252844      990683        53        17          23818             1   \n1252845      576130        80         6             70             2   \n\n         Tot Bwd Pkts  TotLen Fwd Pkts  TotLen Bwd Pkts  Fwd Pkt Len Max  \\\n0                  11             1213             1948              661   \n1                  14             1211             3396              875   \n2                   1               45              163               45   \n3                  20             1118             5653              258   \n4                   2               94              214               47   \n...               ...              ...              ...              ...   \n1252841             2              935              267              935   \n1252842             0               77                0               46   \n1252843             0                0                0                0   \n1252844             1               34              204               34   \n1252845             0                0                0                0   \n\n         Fwd Pkt Len Min  ...  Fwd Seg Size Min    Active Mean     Active Std  \\\n0                      0  ...                20       0.000000       0.000000   \n1                      0  ...                20  116504.666667  117401.762867   \n2                     45  ...                 8       0.000000       0.000000   \n3                      0  ...                20  527683.500000  386311.526445   \n4                     47  ...                 8       0.000000       0.000000   \n...                  ...  ...               ...            ...            ...   \n1252841                0  ...                20       0.000000       0.000000   \n1252842                0  ...                20       0.000000       0.000000   \n1252843                0  ...                20       0.000000       0.000000   \n1252844               34  ...                 8       0.000000       0.000000   \n1252845                0  ...                20       0.000000       0.000000   \n\n         Active Max  Active Min     Idle Mean      Idle Std  Idle Max  \\\n0                 0           0  0.000000e+00  0.000000e+00         0   \n1            356150       68519  1.000239e+07  1.665183e+04  10009249   \n2                 0           0  0.000000e+00  0.000000e+00         0   \n3            800847      254520  3.457024e+07  3.406089e+07  58654921   \n4                 0           0  0.000000e+00  0.000000e+00         0   \n...             ...         ...           ...           ...       ...   \n1252841           0           0  0.000000e+00  0.000000e+00         0   \n1252842           0           0  0.000000e+00  0.000000e+00         0   \n1252843           0           0  0.000000e+00  0.000000e+00         0   \n1252844           0           0  0.000000e+00  0.000000e+00         0   \n1252845           0           0  0.000000e+00  0.000000e+00         0   \n\n         Idle Min  Label  \n0               0      1  \n1         9968397      1  \n2               0      1  \n3        10485549      1  \n4               0      1  \n...           ...    ...  \n1252841         0      1  \n1252842         0      1  \n1252843         0      1  \n1252844         0      1  \n1252845         0      1  \n\n[1252846 rows x 79 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Dst Port</th>\n      <th>Protocol</th>\n      <th>Flow Duration</th>\n      <th>Tot Fwd Pkts</th>\n      <th>Tot Bwd Pkts</th>\n      <th>TotLen Fwd Pkts</th>\n      <th>TotLen Bwd Pkts</th>\n      <th>Fwd Pkt Len Max</th>\n      <th>Fwd Pkt Len Min</th>\n      <th>...</th>\n      <th>Fwd Seg Size Min</th>\n      <th>Active Mean</th>\n      <th>Active Std</th>\n      <th>Active Max</th>\n      <th>Active Min</th>\n      <th>Idle Mean</th>\n      <th>Idle Std</th>\n      <th>Idle Max</th>\n      <th>Idle Min</th>\n      <th>Label</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>146275</td>\n      <td>3389</td>\n      <td>6</td>\n      <td>5206015</td>\n      <td>9</td>\n      <td>11</td>\n      <td>1213</td>\n      <td>1948</td>\n      <td>661</td>\n      <td>0</td>\n      <td>...</td>\n      <td>20</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>512109</td>\n      <td>443</td>\n      <td>6</td>\n      <td>60991608</td>\n      <td>14</td>\n      <td>14</td>\n      <td>1211</td>\n      <td>3396</td>\n      <td>875</td>\n      <td>0</td>\n      <td>...</td>\n      <td>20</td>\n      <td>116504.666667</td>\n      <td>117401.762867</td>\n      <td>356150</td>\n      <td>68519</td>\n      <td>1.000239e+07</td>\n      <td>1.665183e+04</td>\n      <td>10009249</td>\n      <td>9968397</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>807703</td>\n      <td>53</td>\n      <td>17</td>\n      <td>27292</td>\n      <td>1</td>\n      <td>1</td>\n      <td>45</td>\n      <td>163</td>\n      <td>45</td>\n      <td>45</td>\n      <td>...</td>\n      <td>8</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>491912</td>\n      <td>443</td>\n      <td>6</td>\n      <td>70343424</td>\n      <td>17</td>\n      <td>20</td>\n      <td>1118</td>\n      <td>5653</td>\n      <td>258</td>\n      <td>0</td>\n      <td>...</td>\n      <td>20</td>\n      <td>527683.500000</td>\n      <td>386311.526445</td>\n      <td>800847</td>\n      <td>254520</td>\n      <td>3.457024e+07</td>\n      <td>3.406089e+07</td>\n      <td>58654921</td>\n      <td>10485549</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>858679</td>\n      <td>53</td>\n      <td>17</td>\n      <td>137267</td>\n      <td>2</td>\n      <td>2</td>\n      <td>94</td>\n      <td>214</td>\n      <td>47</td>\n      <td>47</td>\n      <td>...</td>\n      <td>8</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>1252841</th>\n      <td>940974</td>\n      <td>64678</td>\n      <td>6</td>\n      <td>1397</td>\n      <td>5</td>\n      <td>2</td>\n      <td>935</td>\n      <td>267</td>\n      <td>935</td>\n      <td>0</td>\n      <td>...</td>\n      <td>20</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1252842</th>\n      <td>45433</td>\n      <td>51274</td>\n      <td>6</td>\n      <td>1</td>\n      <td>3</td>\n      <td>0</td>\n      <td>77</td>\n      <td>0</td>\n      <td>46</td>\n      <td>0</td>\n      <td>...</td>\n      <td>20</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1252843</th>\n      <td>912254</td>\n      <td>80</td>\n      <td>6</td>\n      <td>233</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>20</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1252844</th>\n      <td>990683</td>\n      <td>53</td>\n      <td>17</td>\n      <td>23818</td>\n      <td>1</td>\n      <td>1</td>\n      <td>34</td>\n      <td>204</td>\n      <td>34</td>\n      <td>34</td>\n      <td>...</td>\n      <td>8</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1252845</th>\n      <td>576130</td>\n      <td>80</td>\n      <td>6</td>\n      <td>70</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>20</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>1252846 rows × 79 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df_dataset.info()","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:17.686392Z","iopub.execute_input":"2024-08-10T07:16:17.687123Z","iopub.status.idle":"2024-08-10T07:16:17.853377Z","shell.execute_reply.started":"2024-08-10T07:16:17.687075Z","shell.execute_reply":"2024-08-10T07:16:17.852325Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1252846 entries, 0 to 1252845\nData columns (total 79 columns):\n #   Column             Non-Null Count    Dtype  \n---  ------             --------------    -----  \n 0   Unnamed: 0         1252846 non-null  int64  \n 1   Dst Port           1252846 non-null  int64  \n 2   Protocol           1252846 non-null  int64  \n 3   Flow Duration      1252846 non-null  int64  \n 4   Tot Fwd Pkts       1252846 non-null  int64  \n 5   Tot Bwd Pkts       1252846 non-null  int64  \n 6   TotLen Fwd Pkts    1252846 non-null  int64  \n 7   TotLen Bwd Pkts    1252846 non-null  int64  \n 8   Fwd Pkt Len Max    1252846 non-null  int64  \n 9   Fwd Pkt Len Min    1252846 non-null  int64  \n 10  Fwd Pkt Len Mean   1252846 non-null  float64\n 11  Fwd Pkt Len Std    1252846 non-null  float64\n 12  Bwd Pkt Len Max    1252846 non-null  int64  \n 13  Bwd Pkt Len Min    1252846 non-null  int64  \n 14  Bwd Pkt Len Mean   1252846 non-null  float64\n 15  Bwd Pkt Len Std    1252846 non-null  float64\n 16  Flow Byts/s        1252846 non-null  float64\n 17  Flow Pkts/s        1252846 non-null  float64\n 18  Flow IAT Mean      1252846 non-null  float64\n 19  Flow IAT Std       1252846 non-null  float64\n 20  Flow IAT Max       1252846 non-null  int64  \n 21  Flow IAT Min       1252846 non-null  int64  \n 22  Fwd IAT Tot        1252846 non-null  int64  \n 23  Fwd IAT Mean       1252846 non-null  float64\n 24  Fwd IAT Std        1252846 non-null  float64\n 25  Fwd IAT Max        1252846 non-null  int64  \n 26  Fwd IAT Min        1252846 non-null  int64  \n 27  Bwd IAT Tot        1252846 non-null  int64  \n 28  Bwd IAT Mean       1252846 non-null  float64\n 29  Bwd IAT Std        1252846 non-null  float64\n 30  Bwd IAT Max        1252846 non-null  int64  \n 31  Bwd IAT Min        1252846 non-null  int64  \n 32  Fwd PSH Flags      1252846 non-null  int64  \n 33  Bwd PSH Flags      1252846 non-null  int64  \n 34  Fwd URG Flags      1252846 non-null  int64  \n 35  Bwd URG Flags      1252846 non-null  int64  \n 36  Fwd Header Len     1252846 non-null  int64  \n 37  Bwd Header Len     1252846 non-null  int64  \n 38  Fwd Pkts/s         1252846 non-null  float64\n 39  Bwd Pkts/s         1252846 non-null  float64\n 40  Pkt Len Min        1252846 non-null  int64  \n 41  Pkt Len Max        1252846 non-null  int64  \n 42  Pkt Len Mean       1252846 non-null  float64\n 43  Pkt Len Std        1252846 non-null  float64\n 44  Pkt Len Var        1252846 non-null  float64\n 45  FIN Flag Cnt       1252846 non-null  int64  \n 46  SYN Flag Cnt       1252846 non-null  int64  \n 47  RST Flag Cnt       1252846 non-null  int64  \n 48  PSH Flag Cnt       1252846 non-null  int64  \n 49  ACK Flag Cnt       1252846 non-null  int64  \n 50  URG Flag Cnt       1252846 non-null  int64  \n 51  CWE Flag Count     1252846 non-null  int64  \n 52  ECE Flag Cnt       1252846 non-null  int64  \n 53  Pkt Size Avg       1252846 non-null  float64\n 54  Fwd Seg Size Avg   1252846 non-null  float64\n 55  Bwd Seg Size Avg   1252846 non-null  float64\n 56  Fwd Byts/b Avg     1252846 non-null  int64  \n 57  Fwd Pkts/b Avg     1252846 non-null  int64  \n 58  Fwd Blk Rate Avg   1252846 non-null  int64  \n 59  Bwd Byts/b Avg     1252846 non-null  int64  \n 60  Bwd Pkts/b Avg     1252846 non-null  int64  \n 61  Bwd Blk Rate Avg   1252846 non-null  int64  \n 62  Subflow Fwd Pkts   1252846 non-null  int64  \n 63  Subflow Fwd Byts   1252846 non-null  int64  \n 64  Subflow Bwd Pkts   1252846 non-null  int64  \n 65  Subflow Bwd Byts   1252846 non-null  int64  \n 66  Init Fwd Win Byts  1252846 non-null  int64  \n 67  Init Bwd Win Byts  1252846 non-null  int64  \n 68  Fwd Act Data Pkts  1252846 non-null  int64  \n 69  Fwd Seg Size Min   1252846 non-null  int64  \n 70  Active Mean        1252846 non-null  float64\n 71  Active Std         1252846 non-null  float64\n 72  Active Max         1252846 non-null  int64  \n 73  Active Min         1252846 non-null  int64  \n 74  Idle Mean          1252846 non-null  float64\n 75  Idle Std           1252846 non-null  float64\n 76  Idle Max           1252846 non-null  int64  \n 77  Idle Min           1252846 non-null  int64  \n 78  Label              1252846 non-null  int64  \ndtypes: float64(24), int64(55)\nmemory usage: 755.1 MB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Taking care of missing data, Removing duplicates","metadata":{}},{"cell_type":"code","source":"# replace +ve and -ve infinity with NaN\ndf_dataset.replace([np.inf, -np.inf], np.nan, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:17.855947Z","iopub.execute_input":"2024-08-10T07:16:17.856298Z","iopub.status.idle":"2024-08-10T07:16:17.991648Z","shell.execute_reply.started":"2024-08-10T07:16:17.856266Z","shell.execute_reply":"2024-08-10T07:16:17.990376Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"# drop missing values\ndf_dataset.dropna(inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:17.993197Z","iopub.execute_input":"2024-08-10T07:16:17.993567Z","iopub.status.idle":"2024-08-10T07:16:18.416842Z","shell.execute_reply.started":"2024-08-10T07:16:17.993536Z","shell.execute_reply":"2024-08-10T07:16:18.415656Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"print(df_dataset.duplicated().sum())","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:18.418342Z","iopub.execute_input":"2024-08-10T07:16:18.418810Z","iopub.status.idle":"2024-08-10T07:16:24.025348Z","shell.execute_reply.started":"2024-08-10T07:16:18.418770Z","shell.execute_reply":"2024-08-10T07:16:24.024135Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"117437\n","output_type":"stream"}]},{"cell_type":"code","source":"df_dataset.drop_duplicates(inplace = True)","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:24.026611Z","iopub.execute_input":"2024-08-10T07:16:24.027243Z","iopub.status.idle":"2024-08-10T07:16:29.958865Z","shell.execute_reply.started":"2024-08-10T07:16:24.027199Z","shell.execute_reply":"2024-08-10T07:16:29.957817Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"code","source":"print(df_dataset.duplicated().sum())","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:29.960137Z","iopub.execute_input":"2024-08-10T07:16:29.960705Z","iopub.status.idle":"2024-08-10T07:16:34.734478Z","shell.execute_reply.started":"2024-08-10T07:16:29.960651Z","shell.execute_reply":"2024-08-10T07:16:34.733170Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"0\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Implementing binary classification","metadata":{}},{"cell_type":"code","source":"df_dataset[\"Label\"].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:34.735651Z","iopub.execute_input":"2024-08-10T07:16:34.735980Z","iopub.status.idle":"2024-08-10T07:16:34.756981Z","shell.execute_reply.started":"2024-08-10T07:16:34.735952Z","shell.execute_reply":"2024-08-10T07:16:34.755791Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"1     880060\n4     124280\n5      52051\n2      35127\n3      33817\n6       7598\n7       2028\n8        301\n9         91\n10        46\n11        10\nName: Label, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"old_value = 1\nnew_value = 0\ndf_dataset['Label'] = df_dataset['Label'].replace(old_value, new_value)","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:34.758432Z","iopub.execute_input":"2024-08-10T07:16:34.758822Z","iopub.status.idle":"2024-08-10T07:16:34.980426Z","shell.execute_reply.started":"2024-08-10T07:16:34.758788Z","shell.execute_reply":"2024-08-10T07:16:34.978922Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"code","source":"for i in range(2, 12):\n    old_value = i\n    new_value = 1\n    df_dataset['Label'] = df_dataset['Label'].replace(old_value, new_value)","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:34.982168Z","iopub.execute_input":"2024-08-10T07:16:34.982615Z","iopub.status.idle":"2024-08-10T07:16:35.059799Z","shell.execute_reply.started":"2024-08-10T07:16:34.982573Z","shell.execute_reply":"2024-08-10T07:16:35.058283Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"df_dataset[\"Label\"].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:35.061281Z","iopub.execute_input":"2024-08-10T07:16:35.061631Z","iopub.status.idle":"2024-08-10T07:16:35.082652Z","shell.execute_reply.started":"2024-08-10T07:16:35.061601Z","shell.execute_reply":"2024-08-10T07:16:35.080793Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"0    880060\n1    255349\nName: Label, dtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"# Balancing the data (Undersampling)","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport joblib\nimport sklearn\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV, train_test_split\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix\nfrom sklearn.utils import class_weight\n\nRANDOM_STATE_SEED = 12\n\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\nimport plotly.express as px\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\ndf = df_dataset\nfig = go.Figure(data=[\n    go.Bar(name='Benign', \n           y=df[\"Label\"].value_counts().values[0:1],\n           x=['Benign'],\n           text = df[\"Label\"].value_counts()[0:1],\n           orientation='v',\n           textposition='outside',),\n    go.Bar(name='Malicious', \n           y=df[\"Label\"].value_counts().values[1:2],\n           x=['Malicious'],\n           text = df[\"Label\"].value_counts()[1:2],\n           orientation='v',\n           textposition='outside',)\n])\n# Change the bar mode\nfig.update_layout(\n                  width=800,\n                  height=600,\n                  title=f'Class Distribution',\n                  yaxis_title='Number of attacks',\n                  xaxis_title='Attack Name',)\niplot(fig)","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:35.087983Z","iopub.execute_input":"2024-08-10T07:16:35.088409Z","iopub.status.idle":"2024-08-10T07:16:37.674927Z","shell.execute_reply.started":"2024-08-10T07:16:35.088371Z","shell.execute_reply":"2024-08-10T07:16:37.673882Z"},"trusted":true},"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/html":"        <script type=\"text/javascript\">\n        window.PlotlyConfig = {MathJaxConfig: 'local'};\n        if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n        if (typeof require !== 'undefined') {\n        require.undef(\"plotly\");\n        requirejs.config({\n            paths: {\n                'plotly': ['https://cdn.plot.ly/plotly-2.20.0.min']\n            }\n        });\n        require(['plotly'], function(Plotly) {\n            window._Plotly = Plotly;\n        });\n        }\n        </script>\n        "},"metadata":{}},{"output_type":"display_data","data":{"application/vnd.plotly.v1+json":{"data":[{"name":"Benign","orientation":"v","text":[880060],"textposition":"outside","x":["Benign"],"y":[880060],"type":"bar"},{"name":"Malicious","orientation":"v","text":[255349],"textposition":"outside","x":["Malicious"],"y":[255349],"type":"bar"}],"layout":{"height":600,"template":{"data":{"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"choropleth":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"choropleth"}],"contourcarpet":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"contourcarpet"}],"contour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"contour"}],"heatmapgl":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"heatmapgl"}],"heatmap":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"heatmap"}],"histogram2dcontour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"histogram2dcontour"}],"histogram2d":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"histogram2d"}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"mesh3d":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"mesh3d"}],"parcoords":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"parcoords"}],"pie":[{"automargin":true,"type":"pie"}],"scatter3d":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter3d"}],"scattercarpet":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattercarpet"}],"scattergeo":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergeo"}],"scattergl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergl"}],"scattermapbox":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattermapbox"}],"scatterpolargl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolargl"}],"scatterpolar":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolar"}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"scatterternary":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterternary"}],"surface":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"surface"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}]},"layout":{"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"autotypenumbers":"strict","coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]],"sequential":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"sequentialminus":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]]},"colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"geo":{"bgcolor":"white","lakecolor":"white","landcolor":"#E5ECF6","showlakes":true,"showland":true,"subunitcolor":"white"},"hoverlabel":{"align":"left"},"hovermode":"closest","mapbox":{"style":"light"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"ternary":{"aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"title":{"x":0.05},"xaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2},"yaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2}}},"title":{"text":"Class Distribution"},"width":800,"xaxis":{"title":{"text":"Attack Name"},"type":"category","range":[-0.5,1.5],"autorange":true},"yaxis":{"title":{"text":"Number of attacks"},"type":"linear","range":[0,926378.947368421],"autorange":true}},"config":{"showLink":false,"linkText":"Export to plot.ly","plotlyServerURL":"https://plot.ly"}},"text/html":"<div>                            <div id=\"99d0e0b3-8caf-4a3a-8342-2cf1ba17abc4\" class=\"plotly-graph-div\" style=\"height:600px; width:800px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"99d0e0b3-8caf-4a3a-8342-2cf1ba17abc4\")) {                    Plotly.newPlot(                        \"99d0e0b3-8caf-4a3a-8342-2cf1ba17abc4\",                        [{\"name\":\"Benign\",\"orientation\":\"v\",\"text\":[880060.0],\"textposition\":\"outside\",\"x\":[\"Benign\"],\"y\":[880060],\"type\":\"bar\"},{\"name\":\"Malicious\",\"orientation\":\"v\",\"text\":[255349.0],\"textposition\":\"outside\",\"x\":[\"Malicious\"],\"y\":[255349],\"type\":\"bar\"}],                        {\"height\":600,\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"title\":{\"text\":\"Class Distribution\"},\"width\":800,\"xaxis\":{\"title\":{\"text\":\"Attack Name\"}},\"yaxis\":{\"title\":{\"text\":\"Number of attacks\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('99d0e0b3-8caf-4a3a-8342-2cf1ba17abc4');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"df1 = df[df[\"Label\"] == 0][:255349]\ndf2 = df[df[\"Label\"] == 1][:255349]\ndf_equal = pd.concat([ df1,df2], axis =0)","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:37.676414Z","iopub.execute_input":"2024-08-10T07:16:37.676848Z","iopub.status.idle":"2024-08-10T07:16:38.606920Z","shell.execute_reply.started":"2024-08-10T07:16:37.676806Z","shell.execute_reply":"2024-08-10T07:16:38.605769Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"code","source":"from sklearn.model_selection import RandomizedSearchCV\nfrom scipy.stats import randint","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:38.608217Z","iopub.execute_input":"2024-08-10T07:16:38.608546Z","iopub.status.idle":"2024-08-10T07:16:38.613931Z","shell.execute_reply.started":"2024-08-10T07:16:38.608519Z","shell.execute_reply":"2024-08-10T07:16:38.612613Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"fig = go.Figure(data=[\n    go.Bar(name='Benign', \n           y=df_equal[\"Label\"].value_counts().values[0:1],\n           x=['Benign'],\n           text = df_equal[\"Label\"].value_counts()[0:1],\n           orientation='v',\n           textposition='outside',),\n    go.Bar(name='Malicious', \n           y=df_equal[\"Label\"].value_counts().values[1:2],\n           x=['Malicious'],\n           text = df_equal[\"Label\"].value_counts()[1:2],\n           orientation='v',\n           textposition='outside',)\n])\n# Change the bar mode\nfig.update_layout(\n                  width=800,\n                  height=600,\n                  title=f'Class Distribution',\n                  yaxis_title='Number of attacks',\n                  xaxis_title='Attack Name',)\niplot(fig)","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:38.615457Z","iopub.execute_input":"2024-08-10T07:16:38.615870Z","iopub.status.idle":"2024-08-10T07:16:38.680941Z","shell.execute_reply.started":"2024-08-10T07:16:38.615837Z","shell.execute_reply":"2024-08-10T07:16:38.679591Z"},"trusted":true},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"application/vnd.plotly.v1+json":{"data":[{"name":"Benign","orientation":"v","text":[255349],"textposition":"outside","x":["Benign"],"y":[255349],"type":"bar"},{"name":"Malicious","orientation":"v","text":[255349],"textposition":"outside","x":["Malicious"],"y":[255349],"type":"bar"}],"layout":{"height":600,"template":{"data":{"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"choropleth":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"choropleth"}],"contourcarpet":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"contourcarpet"}],"contour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"contour"}],"heatmapgl":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"heatmapgl"}],"heatmap":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"heatmap"}],"histogram2dcontour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"histogram2dcontour"}],"histogram2d":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"histogram2d"}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"mesh3d":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"mesh3d"}],"parcoords":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"parcoords"}],"pie":[{"automargin":true,"type":"pie"}],"scatter3d":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter3d"}],"scattercarpet":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattercarpet"}],"scattergeo":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergeo"}],"scattergl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergl"}],"scattermapbox":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattermapbox"}],"scatterpolargl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolargl"}],"scatterpolar":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolar"}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"scatterternary":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterternary"}],"surface":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"surface"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}]},"layout":{"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"autotypenumbers":"strict","coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]],"sequential":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"sequentialminus":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]]},"colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"geo":{"bgcolor":"white","lakecolor":"white","landcolor":"#E5ECF6","showlakes":true,"showland":true,"subunitcolor":"white"},"hoverlabel":{"align":"left"},"hovermode":"closest","mapbox":{"style":"light"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"ternary":{"aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"title":{"x":0.05},"xaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2},"yaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2}}},"title":{"text":"Class Distribution"},"width":800,"xaxis":{"title":{"text":"Attack Name"},"type":"category","range":[-0.5,1.5],"autorange":true},"yaxis":{"title":{"text":"Number of attacks"},"type":"linear","range":[0,268788.4210526316],"autorange":true}},"config":{"showLink":false,"linkText":"Export to plot.ly","plotlyServerURL":"https://plot.ly"}},"text/html":"<div>                            <div id=\"292abcc8-6e25-464b-b0c5-eff075a7ef02\" class=\"plotly-graph-div\" style=\"height:600px; width:800px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"292abcc8-6e25-464b-b0c5-eff075a7ef02\")) {                    Plotly.newPlot(                        \"292abcc8-6e25-464b-b0c5-eff075a7ef02\",                        [{\"name\":\"Benign\",\"orientation\":\"v\",\"text\":[255349.0],\"textposition\":\"outside\",\"x\":[\"Benign\"],\"y\":[255349],\"type\":\"bar\"},{\"name\":\"Malicious\",\"orientation\":\"v\",\"text\":[255349.0],\"textposition\":\"outside\",\"x\":[\"Malicious\"],\"y\":[255349],\"type\":\"bar\"}],                        {\"height\":600,\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"title\":{\"text\":\"Class Distribution\"},\"width\":800,\"xaxis\":{\"title\":{\"text\":\"Attack Name\"}},\"yaxis\":{\"title\":{\"text\":\"Number of attacks\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('292abcc8-6e25-464b-b0c5-eff075a7ef02');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# Creating train/test split","metadata":{}},{"cell_type":"code","source":"train, test = train_test_split(df_equal, test_size=0.2)","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:38.682407Z","iopub.execute_input":"2024-08-10T07:16:38.682890Z","iopub.status.idle":"2024-08-10T07:16:39.354718Z","shell.execute_reply.started":"2024-08-10T07:16:38.682849Z","shell.execute_reply":"2024-08-10T07:16:39.353460Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"# display columns\ntrain.columns","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:39.356363Z","iopub.execute_input":"2024-08-10T07:16:39.356726Z","iopub.status.idle":"2024-08-10T07:16:39.364207Z","shell.execute_reply.started":"2024-08-10T07:16:39.356696Z","shell.execute_reply":"2024-08-10T07:16:39.362940Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"Index(['Unnamed: 0', 'Dst Port', 'Protocol', 'Flow Duration', 'Tot Fwd Pkts',\n       'Tot Bwd Pkts', 'TotLen Fwd Pkts', 'TotLen Bwd Pkts', 'Fwd Pkt Len Max',\n       'Fwd Pkt Len Min', 'Fwd Pkt Len Mean', 'Fwd Pkt Len Std',\n       'Bwd Pkt Len Max', 'Bwd Pkt Len Min', 'Bwd Pkt Len Mean',\n       'Bwd Pkt Len Std', 'Flow Byts/s', 'Flow Pkts/s', 'Flow IAT Mean',\n       'Flow IAT Std', 'Flow IAT Max', 'Flow IAT Min', 'Fwd IAT Tot',\n       'Fwd IAT Mean', 'Fwd IAT Std', 'Fwd IAT Max', 'Fwd IAT Min',\n       'Bwd IAT Tot', 'Bwd IAT Mean', 'Bwd IAT Std', 'Bwd IAT Max',\n       'Bwd IAT Min', 'Fwd PSH Flags', 'Bwd PSH Flags', 'Fwd URG Flags',\n       'Bwd URG Flags', 'Fwd Header Len', 'Bwd Header Len', 'Fwd Pkts/s',\n       'Bwd Pkts/s', 'Pkt Len Min', 'Pkt Len Max', 'Pkt Len Mean',\n       'Pkt Len Std', 'Pkt Len Var', 'FIN Flag Cnt', 'SYN Flag Cnt',\n       'RST Flag Cnt', 'PSH Flag Cnt', 'ACK Flag Cnt', 'URG Flag Cnt',\n       'CWE Flag Count', 'ECE Flag Cnt', 'Pkt Size Avg', 'Fwd Seg Size Avg',\n       'Bwd Seg Size Avg', 'Fwd Byts/b Avg', 'Fwd Pkts/b Avg',\n       'Fwd Blk Rate Avg', 'Bwd Byts/b Avg', 'Bwd Pkts/b Avg',\n       'Bwd Blk Rate Avg', 'Subflow Fwd Pkts', 'Subflow Fwd Byts',\n       'Subflow Bwd Pkts', 'Subflow Bwd Byts', 'Init Fwd Win Byts',\n       'Init Bwd Win Byts', 'Fwd Act Data Pkts', 'Fwd Seg Size Min',\n       'Active Mean', 'Active Std', 'Active Max', 'Active Min', 'Idle Mean',\n       'Idle Std', 'Idle Max', 'Idle Min', 'Label'],\n      dtype='object')"},"metadata":{}}]},{"cell_type":"code","source":"# feature info\ntrain.info()","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:39.365798Z","iopub.execute_input":"2024-08-10T07:16:39.366227Z","iopub.status.idle":"2024-08-10T07:16:39.434985Z","shell.execute_reply.started":"2024-08-10T07:16:39.366187Z","shell.execute_reply":"2024-08-10T07:16:39.433567Z"},"trusted":true},"execution_count":21,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nInt64Index: 408558 entries, 308975 to 1122107\nData columns (total 79 columns):\n #   Column             Non-Null Count   Dtype  \n---  ------             --------------   -----  \n 0   Unnamed: 0         408558 non-null  int64  \n 1   Dst Port           408558 non-null  int64  \n 2   Protocol           408558 non-null  int64  \n 3   Flow Duration      408558 non-null  int64  \n 4   Tot Fwd Pkts       408558 non-null  int64  \n 5   Tot Bwd Pkts       408558 non-null  int64  \n 6   TotLen Fwd Pkts    408558 non-null  int64  \n 7   TotLen Bwd Pkts    408558 non-null  int64  \n 8   Fwd Pkt Len Max    408558 non-null  int64  \n 9   Fwd Pkt Len Min    408558 non-null  int64  \n 10  Fwd Pkt Len Mean   408558 non-null  float64\n 11  Fwd Pkt Len Std    408558 non-null  float64\n 12  Bwd Pkt Len Max    408558 non-null  int64  \n 13  Bwd Pkt Len Min    408558 non-null  int64  \n 14  Bwd Pkt Len Mean   408558 non-null  float64\n 15  Bwd Pkt Len Std    408558 non-null  float64\n 16  Flow Byts/s        408558 non-null  float64\n 17  Flow Pkts/s        408558 non-null  float64\n 18  Flow IAT Mean      408558 non-null  float64\n 19  Flow IAT Std       408558 non-null  float64\n 20  Flow IAT Max       408558 non-null  int64  \n 21  Flow IAT Min       408558 non-null  int64  \n 22  Fwd IAT Tot        408558 non-null  int64  \n 23  Fwd IAT Mean       408558 non-null  float64\n 24  Fwd IAT Std        408558 non-null  float64\n 25  Fwd IAT Max        408558 non-null  int64  \n 26  Fwd IAT Min        408558 non-null  int64  \n 27  Bwd IAT Tot        408558 non-null  int64  \n 28  Bwd IAT Mean       408558 non-null  float64\n 29  Bwd IAT Std        408558 non-null  float64\n 30  Bwd IAT Max        408558 non-null  int64  \n 31  Bwd IAT Min        408558 non-null  int64  \n 32  Fwd PSH Flags      408558 non-null  int64  \n 33  Bwd PSH Flags      408558 non-null  int64  \n 34  Fwd URG Flags      408558 non-null  int64  \n 35  Bwd URG Flags      408558 non-null  int64  \n 36  Fwd Header Len     408558 non-null  int64  \n 37  Bwd Header Len     408558 non-null  int64  \n 38  Fwd Pkts/s         408558 non-null  float64\n 39  Bwd Pkts/s         408558 non-null  float64\n 40  Pkt Len Min        408558 non-null  int64  \n 41  Pkt Len Max        408558 non-null  int64  \n 42  Pkt Len Mean       408558 non-null  float64\n 43  Pkt Len Std        408558 non-null  float64\n 44  Pkt Len Var        408558 non-null  float64\n 45  FIN Flag Cnt       408558 non-null  int64  \n 46  SYN Flag Cnt       408558 non-null  int64  \n 47  RST Flag Cnt       408558 non-null  int64  \n 48  PSH Flag Cnt       408558 non-null  int64  \n 49  ACK Flag Cnt       408558 non-null  int64  \n 50  URG Flag Cnt       408558 non-null  int64  \n 51  CWE Flag Count     408558 non-null  int64  \n 52  ECE Flag Cnt       408558 non-null  int64  \n 53  Pkt Size Avg       408558 non-null  float64\n 54  Fwd Seg Size Avg   408558 non-null  float64\n 55  Bwd Seg Size Avg   408558 non-null  float64\n 56  Fwd Byts/b Avg     408558 non-null  int64  \n 57  Fwd Pkts/b Avg     408558 non-null  int64  \n 58  Fwd Blk Rate Avg   408558 non-null  int64  \n 59  Bwd Byts/b Avg     408558 non-null  int64  \n 60  Bwd Pkts/b Avg     408558 non-null  int64  \n 61  Bwd Blk Rate Avg   408558 non-null  int64  \n 62  Subflow Fwd Pkts   408558 non-null  int64  \n 63  Subflow Fwd Byts   408558 non-null  int64  \n 64  Subflow Bwd Pkts   408558 non-null  int64  \n 65  Subflow Bwd Byts   408558 non-null  int64  \n 66  Init Fwd Win Byts  408558 non-null  int64  \n 67  Init Bwd Win Byts  408558 non-null  int64  \n 68  Fwd Act Data Pkts  408558 non-null  int64  \n 69  Fwd Seg Size Min   408558 non-null  int64  \n 70  Active Mean        408558 non-null  float64\n 71  Active Std         408558 non-null  float64\n 72  Active Max         408558 non-null  int64  \n 73  Active Min         408558 non-null  int64  \n 74  Idle Mean          408558 non-null  float64\n 75  Idle Std           408558 non-null  float64\n 76  Idle Max           408558 non-null  int64  \n 77  Idle Min           408558 non-null  int64  \n 78  Label              408558 non-null  int64  \ndtypes: float64(24), int64(55)\nmemory usage: 249.4 MB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Feature scaling","metadata":{}},{"cell_type":"code","source":"min_max_scaler = MinMaxScaler().fit(train[['Flow Duration', 'Tot Fwd Pkts',\n       'Tot Bwd Pkts', 'TotLen Fwd Pkts', 'TotLen Bwd Pkts', 'Fwd Pkt Len Max',\n       'Fwd Pkt Len Min', 'Fwd Pkt Len Mean', 'Fwd Pkt Len Std',\n       'Bwd Pkt Len Max', 'Bwd Pkt Len Min', 'Bwd Pkt Len Mean',\n       'Bwd Pkt Len Std', 'Flow Byts/s', 'Flow Pkts/s', 'Flow IAT Mean',\n       'Flow IAT Std', 'Flow IAT Max', 'Flow IAT Min', 'Fwd IAT Tot',\n       'Fwd IAT Mean', 'Fwd IAT Std', 'Fwd IAT Max', 'Fwd IAT Min',\n       'Bwd IAT Tot', 'Bwd IAT Mean', 'Bwd IAT Std', 'Bwd IAT Max',\n       'Bwd IAT Min', 'Fwd PSH Flags', 'Bwd PSH Flags', 'Fwd URG Flags',\n       'Bwd URG Flags', 'Fwd Header Len', 'Bwd Header Len', 'Fwd Pkts/s',\n       'Bwd Pkts/s', 'Pkt Len Min', 'Pkt Len Max', 'Pkt Len Mean',\n       'Pkt Len Std', 'Pkt Len Var', 'FIN Flag Cnt', 'SYN Flag Cnt',\n       'RST Flag Cnt', 'PSH Flag Cnt', 'ACK Flag Cnt', 'URG Flag Cnt',\n       'CWE Flag Count', 'ECE Flag Cnt', 'Pkt Size Avg',\n       'Fwd Seg Size Avg', 'Bwd Seg Size Avg', 'Fwd Byts/b Avg',\n       'Fwd Pkts/b Avg', 'Fwd Blk Rate Avg', 'Bwd Byts/b Avg',\n       'Bwd Pkts/b Avg', 'Bwd Blk Rate Avg', 'Subflow Fwd Pkts',\n       'Subflow Fwd Byts', 'Subflow Bwd Pkts', 'Subflow Bwd Byts',\n       'Init Fwd Win Byts', 'Init Bwd Win Byts', 'Fwd Act Data Pkts',\n       'Fwd Seg Size Min', 'Active Mean', 'Active Std', 'Active Max',\n       'Active Min', 'Idle Mean', 'Idle Std', 'Idle Max', 'Idle Min']])","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:39.437161Z","iopub.execute_input":"2024-08-10T07:16:39.437613Z","iopub.status.idle":"2024-08-10T07:16:39.688064Z","shell.execute_reply.started":"2024-08-10T07:16:39.437572Z","shell.execute_reply":"2024-08-10T07:16:39.686763Z"},"trusted":true},"execution_count":22,"outputs":[]},{"cell_type":"code","source":"numerical_columns = ['Flow Duration', 'Tot Fwd Pkts',\n       'Tot Bwd Pkts', 'TotLen Fwd Pkts', 'TotLen Bwd Pkts', 'Fwd Pkt Len Max',\n       'Fwd Pkt Len Min', 'Fwd Pkt Len Mean', 'Fwd Pkt Len Std',\n       'Bwd Pkt Len Max', 'Bwd Pkt Len Min', 'Bwd Pkt Len Mean',\n       'Bwd Pkt Len Std', 'Flow Byts/s', 'Flow Pkts/s', 'Flow IAT Mean',\n       'Flow IAT Std', 'Flow IAT Max', 'Flow IAT Min', 'Fwd IAT Tot',\n       'Fwd IAT Mean', 'Fwd IAT Std', 'Fwd IAT Max', 'Fwd IAT Min',\n       'Bwd IAT Tot', 'Bwd IAT Mean', 'Bwd IAT Std', 'Bwd IAT Max',\n       'Bwd IAT Min', 'Fwd PSH Flags', 'Bwd PSH Flags', 'Fwd URG Flags',\n       'Bwd URG Flags', 'Fwd Header Len', 'Bwd Header Len', 'Fwd Pkts/s',\n       'Bwd Pkts/s', 'Pkt Len Min', 'Pkt Len Max', 'Pkt Len Mean',\n       'Pkt Len Std', 'Pkt Len Var', 'FIN Flag Cnt', 'SYN Flag Cnt',\n       'RST Flag Cnt', 'PSH Flag Cnt', 'ACK Flag Cnt', 'URG Flag Cnt',\n       'CWE Flag Count', 'ECE Flag Cnt', 'Pkt Size Avg',\n       'Fwd Seg Size Avg', 'Bwd Seg Size Avg', 'Fwd Byts/b Avg',\n       'Fwd Pkts/b Avg', 'Fwd Blk Rate Avg', 'Bwd Byts/b Avg',\n       'Bwd Pkts/b Avg', 'Bwd Blk Rate Avg', 'Subflow Fwd Pkts',\n       'Subflow Fwd Byts', 'Subflow Bwd Pkts', 'Subflow Bwd Byts',\n       'Init Fwd Win Byts', 'Init Bwd Win Byts', 'Fwd Act Data Pkts',\n       'Fwd Seg Size Min', 'Active Mean', 'Active Std', 'Active Max',\n       'Active Min', 'Idle Mean', 'Idle Std', 'Idle Max', 'Idle Min']","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:39.689595Z","iopub.execute_input":"2024-08-10T07:16:39.690069Z","iopub.status.idle":"2024-08-10T07:16:39.698689Z","shell.execute_reply.started":"2024-08-10T07:16:39.690026Z","shell.execute_reply":"2024-08-10T07:16:39.697341Z"},"trusted":true},"execution_count":23,"outputs":[]},{"cell_type":"code","source":"train[numerical_columns] = min_max_scaler.transform(train[numerical_columns])","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:39.700469Z","iopub.execute_input":"2024-08-10T07:16:39.701100Z","iopub.status.idle":"2024-08-10T07:16:42.401441Z","shell.execute_reply.started":"2024-08-10T07:16:39.701052Z","shell.execute_reply":"2024-08-10T07:16:42.400422Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"code","source":"train","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:42.402832Z","iopub.execute_input":"2024-08-10T07:16:42.403247Z","iopub.status.idle":"2024-08-10T07:16:42.655407Z","shell.execute_reply.started":"2024-08-10T07:16:42.403209Z","shell.execute_reply":"2024-08-10T07:16:42.654291Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"         Unnamed: 0  Dst Port  Protocol  Flow Duration  Tot Fwd Pkts  \\\n308975       915828        53        17   7.816667e-06      0.503794   \n243549       994771        53        17   1.061667e-05      0.503794   \n268019       747777     59025         6   9.500001e-06      0.503856   \n256297      1005541     55623         6   1.677667e-04      0.503856   \n1201970      319484        22         6   2.975267e-03      0.504118   \n...             ...       ...       ...            ...           ...   \n224363       386780        53        17   1.546833e-04      0.503794   \n258181       324899        22         6   3.045142e-03      0.504118   \n87480        880463      5355        17   3.394467e-03      0.503810   \n110479      1026686     57150         6   1.057500e-05      0.503856   \n1122107      116380        21         6   2.000000e-07      0.503794   \n\n         Tot Bwd Pkts  TotLen Fwd Pkts  TotLen Bwd Pkts  Fwd Pkt Len Max  \\\n308975       0.000038         0.000005         0.000002         0.000969   \n243549       0.000038         0.000004         0.000002         0.000856   \n268019       0.000075         0.000107         0.000009         0.021062   \n256297       0.000075         0.000107         0.000008         0.021062   \n1201970      0.000751         0.000221         0.000069         0.014417   \n...               ...              ...              ...              ...   \n224363       0.000038         0.000004         0.000002         0.000743   \n258181       0.000751         0.000221         0.000069         0.014417   \n87480        0.000000         0.000005         0.000000         0.000496   \n110479       0.000075         0.000107         0.000009         0.021062   \n1122107      0.000038         0.000000         0.000000         0.000000   \n\n         Fwd Pkt Len Min  ...  Fwd Seg Size Min  Active Mean  Active Std  \\\n308975          0.029452  ...          0.181818          0.0         0.0   \n243549          0.026027  ...          0.181818          0.0         0.0   \n268019          0.000000  ...          0.454545          0.0         0.0   \n256297          0.000000  ...          0.454545          0.0         0.0   \n1201970         0.000000  ...          0.727273          0.0         0.0   \n...                  ...  ...               ...          ...         ...   \n224363          0.022603  ...          0.181818          0.0         0.0   \n258181          0.000000  ...          0.727273          0.0         0.0   \n87480           0.015068  ...          0.181818          0.0         0.0   \n110479          0.000000  ...          0.454545          0.0         0.0   \n1122107         0.000000  ...          0.909091          0.0         0.0   \n\n         Active Max  Active Min  Idle Mean  Idle Std  Idle Max  Idle Min  \\\n308975          0.0         0.0        0.0       0.0       0.0       0.0   \n243549          0.0         0.0        0.0       0.0       0.0       0.0   \n268019          0.0         0.0        0.0       0.0       0.0       0.0   \n256297          0.0         0.0        0.0       0.0       0.0       0.0   \n1201970         0.0         0.0        0.0       0.0       0.0       0.0   \n...             ...         ...        ...       ...       ...       ...   \n224363          0.0         0.0        0.0       0.0       0.0       0.0   \n258181          0.0         0.0        0.0       0.0       0.0       0.0   \n87480           0.0         0.0        0.0       0.0       0.0       0.0   \n110479          0.0         0.0        0.0       0.0       0.0       0.0   \n1122107         0.0         0.0        0.0       0.0       0.0       0.0   \n\n         Label  \n308975       0  \n243549       0  \n268019       0  \n256297       0  \n1201970      1  \n...        ...  \n224363       0  \n258181       1  \n87480        0  \n110479       0  \n1122107      1  \n\n[408558 rows x 79 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Dst Port</th>\n      <th>Protocol</th>\n      <th>Flow Duration</th>\n      <th>Tot Fwd Pkts</th>\n      <th>Tot Bwd Pkts</th>\n      <th>TotLen Fwd Pkts</th>\n      <th>TotLen Bwd Pkts</th>\n      <th>Fwd Pkt Len Max</th>\n      <th>Fwd Pkt Len Min</th>\n      <th>...</th>\n      <th>Fwd Seg Size Min</th>\n      <th>Active Mean</th>\n      <th>Active Std</th>\n      <th>Active Max</th>\n      <th>Active Min</th>\n      <th>Idle Mean</th>\n      <th>Idle Std</th>\n      <th>Idle Max</th>\n      <th>Idle Min</th>\n      <th>Label</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>308975</th>\n      <td>915828</td>\n      <td>53</td>\n      <td>17</td>\n      <td>7.816667e-06</td>\n      <td>0.503794</td>\n      <td>0.000038</td>\n      <td>0.000005</td>\n      <td>0.000002</td>\n      <td>0.000969</td>\n      <td>0.029452</td>\n      <td>...</td>\n      <td>0.181818</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>243549</th>\n      <td>994771</td>\n      <td>53</td>\n      <td>17</td>\n      <td>1.061667e-05</td>\n      <td>0.503794</td>\n      <td>0.000038</td>\n      <td>0.000004</td>\n      <td>0.000002</td>\n      <td>0.000856</td>\n      <td>0.026027</td>\n      <td>...</td>\n      <td>0.181818</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>268019</th>\n      <td>747777</td>\n      <td>59025</td>\n      <td>6</td>\n      <td>9.500001e-06</td>\n      <td>0.503856</td>\n      <td>0.000075</td>\n      <td>0.000107</td>\n      <td>0.000009</td>\n      <td>0.021062</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.454545</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>256297</th>\n      <td>1005541</td>\n      <td>55623</td>\n      <td>6</td>\n      <td>1.677667e-04</td>\n      <td>0.503856</td>\n      <td>0.000075</td>\n      <td>0.000107</td>\n      <td>0.000008</td>\n      <td>0.021062</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.454545</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1201970</th>\n      <td>319484</td>\n      <td>22</td>\n      <td>6</td>\n      <td>2.975267e-03</td>\n      <td>0.504118</td>\n      <td>0.000751</td>\n      <td>0.000221</td>\n      <td>0.000069</td>\n      <td>0.014417</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.727273</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>224363</th>\n      <td>386780</td>\n      <td>53</td>\n      <td>17</td>\n      <td>1.546833e-04</td>\n      <td>0.503794</td>\n      <td>0.000038</td>\n      <td>0.000004</td>\n      <td>0.000002</td>\n      <td>0.000743</td>\n      <td>0.022603</td>\n      <td>...</td>\n      <td>0.181818</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>258181</th>\n      <td>324899</td>\n      <td>22</td>\n      <td>6</td>\n      <td>3.045142e-03</td>\n      <td>0.504118</td>\n      <td>0.000751</td>\n      <td>0.000221</td>\n      <td>0.000069</td>\n      <td>0.014417</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.727273</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>87480</th>\n      <td>880463</td>\n      <td>5355</td>\n      <td>17</td>\n      <td>3.394467e-03</td>\n      <td>0.503810</td>\n      <td>0.000000</td>\n      <td>0.000005</td>\n      <td>0.000000</td>\n      <td>0.000496</td>\n      <td>0.015068</td>\n      <td>...</td>\n      <td>0.181818</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>110479</th>\n      <td>1026686</td>\n      <td>57150</td>\n      <td>6</td>\n      <td>1.057500e-05</td>\n      <td>0.503856</td>\n      <td>0.000075</td>\n      <td>0.000107</td>\n      <td>0.000009</td>\n      <td>0.021062</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.454545</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1122107</th>\n      <td>116380</td>\n      <td>21</td>\n      <td>6</td>\n      <td>2.000000e-07</td>\n      <td>0.503794</td>\n      <td>0.000038</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.909091</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>408558 rows × 79 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train.drop(['Unnamed: 0'], axis=1,inplace=True)\ntest.drop(['Unnamed: 0'],axis=1,inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:42.656795Z","iopub.execute_input":"2024-08-10T07:16:42.657108Z","iopub.status.idle":"2024-08-10T07:16:42.922514Z","shell.execute_reply.started":"2024-08-10T07:16:42.657081Z","shell.execute_reply":"2024-08-10T07:16:42.921417Z"},"trusted":true},"execution_count":26,"outputs":[]},{"cell_type":"code","source":"train","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:42.923946Z","iopub.execute_input":"2024-08-10T07:16:42.924330Z","iopub.status.idle":"2024-08-10T07:16:43.032956Z","shell.execute_reply.started":"2024-08-10T07:16:42.924298Z","shell.execute_reply":"2024-08-10T07:16:43.031885Z"},"trusted":true},"execution_count":27,"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"         Dst Port  Protocol  Flow Duration  Tot Fwd Pkts  Tot Bwd Pkts  \\\n308975         53        17   7.816667e-06      0.503794      0.000038   \n243549         53        17   1.061667e-05      0.503794      0.000038   \n268019      59025         6   9.500001e-06      0.503856      0.000075   \n256297      55623         6   1.677667e-04      0.503856      0.000075   \n1201970        22         6   2.975267e-03      0.504118      0.000751   \n...           ...       ...            ...           ...           ...   \n224363         53        17   1.546833e-04      0.503794      0.000038   \n258181         22         6   3.045142e-03      0.504118      0.000751   \n87480        5355        17   3.394467e-03      0.503810      0.000000   \n110479      57150         6   1.057500e-05      0.503856      0.000075   \n1122107        21         6   2.000000e-07      0.503794      0.000038   \n\n         TotLen Fwd Pkts  TotLen Bwd Pkts  Fwd Pkt Len Max  Fwd Pkt Len Min  \\\n308975          0.000005         0.000002         0.000969         0.029452   \n243549          0.000004         0.000002         0.000856         0.026027   \n268019          0.000107         0.000009         0.021062         0.000000   \n256297          0.000107         0.000008         0.021062         0.000000   \n1201970         0.000221         0.000069         0.014417         0.000000   \n...                  ...              ...              ...              ...   \n224363          0.000004         0.000002         0.000743         0.022603   \n258181          0.000221         0.000069         0.014417         0.000000   \n87480           0.000005         0.000000         0.000496         0.015068   \n110479          0.000107         0.000009         0.021062         0.000000   \n1122107         0.000000         0.000000         0.000000         0.000000   \n\n         Fwd Pkt Len Mean  ...  Fwd Seg Size Min  Active Mean  Active Std  \\\n308975           0.007279  ...          0.181818          0.0         0.0   \n243549           0.006432  ...          0.181818          0.0         0.0   \n268019           0.031654  ...          0.454545          0.0         0.0   \n256297           0.031654  ...          0.454545          0.0         0.0   \n1201970          0.014835  ...          0.727273          0.0         0.0   \n...                   ...  ...               ...          ...         ...   \n224363           0.005586  ...          0.181818          0.0         0.0   \n258181           0.014835  ...          0.727273          0.0         0.0   \n87480            0.003724  ...          0.181818          0.0         0.0   \n110479           0.031654  ...          0.454545          0.0         0.0   \n1122107          0.000000  ...          0.909091          0.0         0.0   \n\n         Active Max  Active Min  Idle Mean  Idle Std  Idle Max  Idle Min  \\\n308975          0.0         0.0        0.0       0.0       0.0       0.0   \n243549          0.0         0.0        0.0       0.0       0.0       0.0   \n268019          0.0         0.0        0.0       0.0       0.0       0.0   \n256297          0.0         0.0        0.0       0.0       0.0       0.0   \n1201970         0.0         0.0        0.0       0.0       0.0       0.0   \n...             ...         ...        ...       ...       ...       ...   \n224363          0.0         0.0        0.0       0.0       0.0       0.0   \n258181          0.0         0.0        0.0       0.0       0.0       0.0   \n87480           0.0         0.0        0.0       0.0       0.0       0.0   \n110479          0.0         0.0        0.0       0.0       0.0       0.0   \n1122107         0.0         0.0        0.0       0.0       0.0       0.0   \n\n         Label  \n308975       0  \n243549       0  \n268019       0  \n256297       0  \n1201970      1  \n...        ...  \n224363       0  \n258181       1  \n87480        0  \n110479       0  \n1122107      1  \n\n[408558 rows x 78 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Dst Port</th>\n      <th>Protocol</th>\n      <th>Flow Duration</th>\n      <th>Tot Fwd Pkts</th>\n      <th>Tot Bwd Pkts</th>\n      <th>TotLen Fwd Pkts</th>\n      <th>TotLen Bwd Pkts</th>\n      <th>Fwd Pkt Len Max</th>\n      <th>Fwd Pkt Len Min</th>\n      <th>Fwd Pkt Len Mean</th>\n      <th>...</th>\n      <th>Fwd Seg Size Min</th>\n      <th>Active Mean</th>\n      <th>Active Std</th>\n      <th>Active Max</th>\n      <th>Active Min</th>\n      <th>Idle Mean</th>\n      <th>Idle Std</th>\n      <th>Idle Max</th>\n      <th>Idle Min</th>\n      <th>Label</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>308975</th>\n      <td>53</td>\n      <td>17</td>\n      <td>7.816667e-06</td>\n      <td>0.503794</td>\n      <td>0.000038</td>\n      <td>0.000005</td>\n      <td>0.000002</td>\n      <td>0.000969</td>\n      <td>0.029452</td>\n      <td>0.007279</td>\n      <td>...</td>\n      <td>0.181818</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>243549</th>\n      <td>53</td>\n      <td>17</td>\n      <td>1.061667e-05</td>\n      <td>0.503794</td>\n      <td>0.000038</td>\n      <td>0.000004</td>\n      <td>0.000002</td>\n      <td>0.000856</td>\n      <td>0.026027</td>\n      <td>0.006432</td>\n      <td>...</td>\n      <td>0.181818</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>268019</th>\n      <td>59025</td>\n      <td>6</td>\n      <td>9.500001e-06</td>\n      <td>0.503856</td>\n      <td>0.000075</td>\n      <td>0.000107</td>\n      <td>0.000009</td>\n      <td>0.021062</td>\n      <td>0.000000</td>\n      <td>0.031654</td>\n      <td>...</td>\n      <td>0.454545</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>256297</th>\n      <td>55623</td>\n      <td>6</td>\n      <td>1.677667e-04</td>\n      <td>0.503856</td>\n      <td>0.000075</td>\n      <td>0.000107</td>\n      <td>0.000008</td>\n      <td>0.021062</td>\n      <td>0.000000</td>\n      <td>0.031654</td>\n      <td>...</td>\n      <td>0.454545</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1201970</th>\n      <td>22</td>\n      <td>6</td>\n      <td>2.975267e-03</td>\n      <td>0.504118</td>\n      <td>0.000751</td>\n      <td>0.000221</td>\n      <td>0.000069</td>\n      <td>0.014417</td>\n      <td>0.000000</td>\n      <td>0.014835</td>\n      <td>...</td>\n      <td>0.727273</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>224363</th>\n      <td>53</td>\n      <td>17</td>\n      <td>1.546833e-04</td>\n      <td>0.503794</td>\n      <td>0.000038</td>\n      <td>0.000004</td>\n      <td>0.000002</td>\n      <td>0.000743</td>\n      <td>0.022603</td>\n      <td>0.005586</td>\n      <td>...</td>\n      <td>0.181818</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>258181</th>\n      <td>22</td>\n      <td>6</td>\n      <td>3.045142e-03</td>\n      <td>0.504118</td>\n      <td>0.000751</td>\n      <td>0.000221</td>\n      <td>0.000069</td>\n      <td>0.014417</td>\n      <td>0.000000</td>\n      <td>0.014835</td>\n      <td>...</td>\n      <td>0.727273</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>87480</th>\n      <td>5355</td>\n      <td>17</td>\n      <td>3.394467e-03</td>\n      <td>0.503810</td>\n      <td>0.000000</td>\n      <td>0.000005</td>\n      <td>0.000000</td>\n      <td>0.000496</td>\n      <td>0.015068</td>\n      <td>0.003724</td>\n      <td>...</td>\n      <td>0.181818</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>110479</th>\n      <td>57150</td>\n      <td>6</td>\n      <td>1.057500e-05</td>\n      <td>0.503856</td>\n      <td>0.000075</td>\n      <td>0.000107</td>\n      <td>0.000009</td>\n      <td>0.021062</td>\n      <td>0.000000</td>\n      <td>0.031654</td>\n      <td>...</td>\n      <td>0.454545</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1122107</th>\n      <td>21</td>\n      <td>6</td>\n      <td>2.000000e-07</td>\n      <td>0.503794</td>\n      <td>0.000038</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.909091</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>408558 rows × 78 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"test[numerical_columns] = min_max_scaler.transform(test[numerical_columns])","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:43.034213Z","iopub.execute_input":"2024-08-10T07:16:43.034548Z","iopub.status.idle":"2024-08-10T07:16:43.432030Z","shell.execute_reply.started":"2024-08-10T07:16:43.034518Z","shell.execute_reply":"2024-08-10T07:16:43.430839Z"},"trusted":true},"execution_count":28,"outputs":[]},{"cell_type":"markdown","source":"# Counting number of records in each split","metadata":{}},{"cell_type":"code","source":"print(\"Full dataset:\\n\")\nprint(\"Benign: \" + str(df_equal[\"Label\"].value_counts()[[0]].sum()))\nprint(\"Malicious: \" + str(df_equal[\"Label\"].value_counts()[[1]].sum()))\nprint(\"---------------\")\n\nprint(\"Training set:\\n\")\nprint(\"Benign: \" + str(train[\"Label\"].value_counts()[[0]].sum()))\nprint(\"Malicious: \" + str(train[\"Label\"].value_counts()[[1]].sum()))\nprint(\"---------------\")\n\nprint(\"Test set:\\n\")\nprint(\"Benign: \" + str(test[\"Label\"].value_counts()[[0]].sum()))\nprint(\"Malicious: \" + str(test[\"Label\"].value_counts()[[1]].sum()))","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:43.433883Z","iopub.execute_input":"2024-08-10T07:16:43.434199Z","iopub.status.idle":"2024-08-10T07:16:43.472849Z","shell.execute_reply.started":"2024-08-10T07:16:43.434173Z","shell.execute_reply":"2024-08-10T07:16:43.471604Z"},"trusted":true},"execution_count":29,"outputs":[{"name":"stdout","text":"Full dataset:\n\nBenign: 255349\nMalicious: 255349\n---------------\nTraining set:\n\nBenign: 204017\nMalicious: 204541\n---------------\nTest set:\n\nBenign: 51332\nMalicious: 50808\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Creating X, y variables","metadata":{}},{"cell_type":"code","source":"y_train = np.array(train.pop(\"Label\"))# pop removes \"Label\" from the dataframe\nX_train = train.values","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:43.474363Z","iopub.execute_input":"2024-08-10T07:16:43.474709Z","iopub.status.idle":"2024-08-10T07:16:43.744398Z","shell.execute_reply.started":"2024-08-10T07:16:43.474677Z","shell.execute_reply":"2024-08-10T07:16:43.743306Z"},"trusted":true},"execution_count":30,"outputs":[]},{"cell_type":"code","source":"y_test = np.array(test.pop(\"Label\")) # pop removes \"Label\" from the dataframe\nX_test = test.values","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:43.745772Z","iopub.execute_input":"2024-08-10T07:16:43.746096Z","iopub.status.idle":"2024-08-10T07:16:43.795453Z","shell.execute_reply.started":"2024-08-10T07:16:43.746068Z","shell.execute_reply":"2024-08-10T07:16:43.794108Z"},"trusted":true},"execution_count":31,"outputs":[]},{"cell_type":"markdown","source":"# Decision Tree Classifier","metadata":{}},{"cell_type":"code","source":"from sklearn.tree import DecisionTreeClassifier\ndt = DecisionTreeClassifier(criterion = 'entropy', max_depth=5)\n\nparameters = {'max_depth': [2, 4, 7, 10], 'min_samples_split': [2, 3, 5], 'min_samples_leaf': [1, 2, 3, 5], 'criterion': ['gini', 'entropy']}\n\nrandom_search = RandomizedSearchCV(dt, param_distributions=parameters, n_iter=10, cv=5, n_jobs=-1)\nrandom_search.fit(X_train, y_train)\nbest_accuracy = random_search.best_score_\nbest_parameters = random_search.best_params_\n\nprint(\"Best Accuracy: {:.2f} %\".format(best_accuracy*100))\nprint(\"Best Parameters:\", best_parameters)","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:16:43.797013Z","iopub.execute_input":"2024-08-10T07:16:43.797383Z","iopub.status.idle":"2024-08-10T07:19:03.454407Z","shell.execute_reply.started":"2024-08-10T07:16:43.797351Z","shell.execute_reply":"2024-08-10T07:19:03.453055Z"},"trusted":true},"execution_count":32,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/scipy/__init__.py:146: UserWarning: A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.23.5\n  warnings.warn(f\"A NumPy version >={np_minversion} and <{np_maxversion}\"\n/opt/conda/lib/python3.10/site-packages/scipy/__init__.py:146: UserWarning: A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.23.5\n  warnings.warn(f\"A NumPy version >={np_minversion} and <{np_maxversion}\"\n/opt/conda/lib/python3.10/site-packages/scipy/__init__.py:146: UserWarning: A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.23.5\n  warnings.warn(f\"A NumPy version >={np_minversion} and <{np_maxversion}\"\n/opt/conda/lib/python3.10/site-packages/scipy/__init__.py:146: UserWarning: A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.23.5\n  warnings.warn(f\"A NumPy version >={np_minversion} and <{np_maxversion}\"\n","output_type":"stream"},{"name":"stdout","text":"Best Accuracy: 99.99 %\nBest Parameters: {'min_samples_split': 2, 'min_samples_leaf': 1, 'max_depth': 10, 'criterion': 'entropy'}\n","output_type":"stream"}]},{"cell_type":"code","source":"from sklearn import metrics\nbest_dt = DecisionTreeClassifier(**random_search.best_params_)\nbest_dt.fit(X_train,y_train)\n\n# Predicting Train & Test Results\ny_dt = best_dt.predict(X_train)\ny_pred_dt = best_dt.predict(X_test)\n\n# Accuracy\nprint(\"Accuracy on Training set: \",metrics.accuracy_score(y_train, y_dt))\nprint(\"Accuracy on Testing set: \",metrics.accuracy_score(y_test, y_pred_dt))","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:19:03.456129Z","iopub.execute_input":"2024-08-10T07:19:03.456494Z","iopub.status.idle":"2024-08-10T07:19:17.479535Z","shell.execute_reply.started":"2024-08-10T07:19:03.456454Z","shell.execute_reply":"2024-08-10T07:19:17.478408Z"},"trusted":true},"execution_count":33,"outputs":[{"name":"stdout","text":"Accuracy on Training set:  0.9999412568105386\nAccuracy on Testing set:  0.9998139808106521\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Random Forest Classifier","metadata":{}},{"cell_type":"code","source":"from sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(n_estimators=60)\n\nparameters = {'n_estimators': [50, 100, 150], 'max_depth': [None, 5, 10], 'min_samples_split': [2, 5, 10],\n              'min_samples_leaf': [1, 2, 4], 'max_features': ['sqrt', 'log2', None]}\n\nrandom_search = RandomizedSearchCV(rf, param_distributions=parameters, n_iter=10, cv=5, n_jobs=-1)\nrandom_search.fit(X_train, y_train)\nbest_accuracy = random_search.best_score_\nbest_parameters = random_search.best_params_\n\nprint(\"Best Accuracy: {:.2f} %\".format(best_accuracy*100))\nprint(\"Best Parameters:\", best_parameters)","metadata":{"execution":{"iopub.status.busy":"2024-08-10T07:19:17.481213Z","iopub.execute_input":"2024-08-10T07:19:17.481653Z","iopub.status.idle":"2024-08-10T08:11:44.785198Z","shell.execute_reply.started":"2024-08-10T07:19:17.481612Z","shell.execute_reply":"2024-08-10T08:11:44.783833Z"},"trusted":true},"execution_count":34,"outputs":[{"name":"stdout","text":"Best Accuracy: 99.98 %\nBest Parameters: {'n_estimators': 50, 'min_samples_split': 5, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 10}\n","output_type":"stream"}]},{"cell_type":"code","source":"best_rf = RandomForestClassifier(**random_search.best_params_)\nbest_rf.fit(X_train, y_train)\n\n# Predicting Train & Test Results\ny_rf = best_rf.predict(X_train)\ny_pred_rf = best_rf.predict(X_test)\n\n# Accuracy\nprint(\"Accuracy on Training set: \",metrics.accuracy_score(y_train, y_rf))\nprint(\"Accuracy on Testing set: \",metrics.accuracy_score(y_test, y_pred_rf))","metadata":{"execution":{"iopub.status.busy":"2024-08-10T08:11:44.786920Z","iopub.execute_input":"2024-08-10T08:11:44.787373Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from joblib import dump\nfilename = 'cic_clean_dt_rf_80_20.joblib'\n# linear_svm, knn, decision tree, random forest\nmodels = [best_dt, best_rf]\ndump(models, filename)","metadata":{"trusted":true},"execution_count":null,"outputs":[]}]}